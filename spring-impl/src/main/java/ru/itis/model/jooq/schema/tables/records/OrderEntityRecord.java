/*
 * This file is generated by jOOQ.
 */
package ru.itis.model.jooq.schema.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.model.jooq.schema.tables.OrderEntity;
import ru.itis.model.jooq.schema.tables.pojos.OrderEntityPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderEntityRecord extends UpdatableRecordImpl<OrderEntityRecord> implements Record4<UUID, UUID, LocalDateTime, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.order_entity.order_id</code>.
     */
    public void setOrderId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_entity.order_id</code>.
     */
    public UUID getOrderId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.order_entity.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_entity.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.order_entity.order_date</code>.
     */
    public void setOrderDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_entity.order_date</code>.
     */
    public LocalDateTime getOrderDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.order_entity.total_price</code>.
     */
    public void setTotalPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order_entity.total_price</code>.
     */
    public BigDecimal getTotalPrice() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, LocalDateTime, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, LocalDateTime, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return OrderEntity.ORDER_ENTITY.ORDER_ID;
    }

    @Override
    public Field<UUID> field2() {
        return OrderEntity.ORDER_ENTITY.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return OrderEntity.ORDER_ENTITY.ORDER_DATE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return OrderEntity.ORDER_ENTITY.TOTAL_PRICE;
    }

    @Override
    public UUID component1() {
        return getOrderId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getOrderDate();
    }

    @Override
    public BigDecimal component4() {
        return getTotalPrice();
    }

    @Override
    public UUID value1() {
        return getOrderId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getOrderDate();
    }

    @Override
    public BigDecimal value4() {
        return getTotalPrice();
    }

    @Override
    public OrderEntityRecord value1(UUID value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderEntityRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public OrderEntityRecord value3(LocalDateTime value) {
        setOrderDate(value);
        return this;
    }

    @Override
    public OrderEntityRecord value4(BigDecimal value) {
        setTotalPrice(value);
        return this;
    }

    @Override
    public OrderEntityRecord values(UUID value1, UUID value2, LocalDateTime value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderEntityRecord
     */
    public OrderEntityRecord() {
        super(OrderEntity.ORDER_ENTITY);
    }

    /**
     * Create a detached, initialised OrderEntityRecord
     */
    public OrderEntityRecord(UUID orderId, UUID userId, LocalDateTime orderDate, BigDecimal totalPrice) {
        super(OrderEntity.ORDER_ENTITY);

        setOrderId(orderId);
        setUserId(userId);
        setOrderDate(orderDate);
        setTotalPrice(totalPrice);
    }

    /**
     * Create a detached, initialised OrderEntityRecord
     */
    public OrderEntityRecord(OrderEntityPojo value) {
        super(OrderEntity.ORDER_ENTITY);

        if (value != null) {
            setOrderId(value.getOrderId());
            setUserId(value.getUserId());
            setOrderDate(value.getOrderDate());
            setTotalPrice(value.getTotalPrice());
        }
    }
}
