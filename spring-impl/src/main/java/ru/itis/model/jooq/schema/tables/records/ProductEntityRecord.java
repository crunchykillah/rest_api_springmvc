/*
 * This file is generated by jOOQ.
 */
package ru.itis.model.jooq.schema.tables.records;


import java.math.BigDecimal;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.model.jooq.schema.tables.ProductEntity;
import ru.itis.model.jooq.schema.tables.pojos.ProductEntityPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductEntityRecord extends UpdatableRecordImpl<ProductEntityRecord> implements Record3<UUID, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_entity.product_id</code>.
     */
    public void setProductId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.product_entity.product_id</code>.
     */
    public UUID getProductId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.product_entity.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.product_entity.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product_entity.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.product_entity.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, String, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, String, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ProductEntity.PRODUCT_ENTITY.PRODUCT_ID;
    }

    @Override
    public Field<String> field2() {
        return ProductEntity.PRODUCT_ENTITY.NAME;
    }

    @Override
    public Field<BigDecimal> field3() {
        return ProductEntity.PRODUCT_ENTITY.PRICE;
    }

    @Override
    public UUID component1() {
        return getProductId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public BigDecimal component3() {
        return getPrice();
    }

    @Override
    public UUID value1() {
        return getProductId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public BigDecimal value3() {
        return getPrice();
    }

    @Override
    public ProductEntityRecord value1(UUID value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductEntityRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductEntityRecord value3(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductEntityRecord values(UUID value1, String value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductEntityRecord
     */
    public ProductEntityRecord() {
        super(ProductEntity.PRODUCT_ENTITY);
    }

    /**
     * Create a detached, initialised ProductEntityRecord
     */
    public ProductEntityRecord(UUID productId, String name, BigDecimal price) {
        super(ProductEntity.PRODUCT_ENTITY);

        setProductId(productId);
        setName(name);
        setPrice(price);
    }

    /**
     * Create a detached, initialised ProductEntityRecord
     */
    public ProductEntityRecord(ProductEntityPojo value) {
        super(ProductEntity.PRODUCT_ENTITY);

        if (value != null) {
            setProductId(value.getProductId());
            setName(value.getName());
            setPrice(value.getPrice());
        }
    }
}
