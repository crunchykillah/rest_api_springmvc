/*
 * This file is generated by jOOQ.
 */
package ru.itis.model.jooq.schema;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.itis.model.jooq.schema.tables.AddressEntity;
import ru.itis.model.jooq.schema.tables.OrderEntity;
import ru.itis.model.jooq.schema.tables.OrderProduct;
import ru.itis.model.jooq.schema.tables.ProductEntity;
import ru.itis.model.jooq.schema.tables.UserEntity;
import ru.itis.model.jooq.schema.tables.records.AddressEntityRecord;
import ru.itis.model.jooq.schema.tables.records.OrderEntityRecord;
import ru.itis.model.jooq.schema.tables.records.OrderProductRecord;
import ru.itis.model.jooq.schema.tables.records.ProductEntityRecord;
import ru.itis.model.jooq.schema.tables.records.UserEntityRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AddressEntityRecord> ADDRESS_ENTITY_PKEY = Internal.createUniqueKey(AddressEntity.ADDRESS_ENTITY, DSL.name("address_entity_pkey"), new TableField[] { AddressEntity.ADDRESS_ENTITY.ADDRESS_ID }, true);
    public static final UniqueKey<AddressEntityRecord> ADDRESS_ENTITY_USER_ID_KEY = Internal.createUniqueKey(AddressEntity.ADDRESS_ENTITY, DSL.name("address_entity_user_id_key"), new TableField[] { AddressEntity.ADDRESS_ENTITY.USER_ID }, true);
    public static final UniqueKey<OrderEntityRecord> ORDER_ENTITY_PKEY = Internal.createUniqueKey(OrderEntity.ORDER_ENTITY, DSL.name("order_entity_pkey"), new TableField[] { OrderEntity.ORDER_ENTITY.ORDER_ID }, true);
    public static final UniqueKey<OrderProductRecord> ORDER_PRODUCT_PKEY = Internal.createUniqueKey(OrderProduct.ORDER_PRODUCT, DSL.name("order_product_pkey"), new TableField[] { OrderProduct.ORDER_PRODUCT.ORDER_PRODUCT_ID }, true);
    public static final UniqueKey<ProductEntityRecord> PRODUCT_ENTITY_PKEY = Internal.createUniqueKey(ProductEntity.PRODUCT_ENTITY, DSL.name("product_entity_pkey"), new TableField[] { ProductEntity.PRODUCT_ENTITY.PRODUCT_ID }, true);
    public static final UniqueKey<UserEntityRecord> USER_ENTITY_PKEY = Internal.createUniqueKey(UserEntity.USER_ENTITY, DSL.name("user_entity_pkey"), new TableField[] { UserEntity.USER_ENTITY.USER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressEntityRecord, UserEntityRecord> ADDRESS_ENTITY__ADDRESS_ENTITY_USER_ENTITY_USER_ID_FK = Internal.createForeignKey(AddressEntity.ADDRESS_ENTITY, DSL.name("address_entity_user_entity_user_id_fk"), new TableField[] { AddressEntity.ADDRESS_ENTITY.USER_ID }, Keys.USER_ENTITY_PKEY, new TableField[] { UserEntity.USER_ENTITY.USER_ID }, true);
    public static final ForeignKey<OrderEntityRecord, UserEntityRecord> ORDER_ENTITY__ORDER_ENTITY_USER_ENTITY_USER_ID_FK = Internal.createForeignKey(OrderEntity.ORDER_ENTITY, DSL.name("order_entity_user_entity_user_id_fk"), new TableField[] { OrderEntity.ORDER_ENTITY.USER_ID }, Keys.USER_ENTITY_PKEY, new TableField[] { UserEntity.USER_ENTITY.USER_ID }, true);
    public static final ForeignKey<OrderProductRecord, OrderEntityRecord> ORDER_PRODUCT__ORDER_PRODUCT_ORDER_ENTITY_ORDER_ID_FK = Internal.createForeignKey(OrderProduct.ORDER_PRODUCT, DSL.name("order_product_order_entity_order_id_fk"), new TableField[] { OrderProduct.ORDER_PRODUCT.ORDER_ID }, Keys.ORDER_ENTITY_PKEY, new TableField[] { OrderEntity.ORDER_ENTITY.ORDER_ID }, true);
    public static final ForeignKey<OrderProductRecord, ProductEntityRecord> ORDER_PRODUCT__ORDER_PRODUCT_PRODUCT_ENTITY_PRODUCT_ID_FK = Internal.createForeignKey(OrderProduct.ORDER_PRODUCT, DSL.name("order_product_product_entity_product_id_fk"), new TableField[] { OrderProduct.ORDER_PRODUCT.PRODUCT_ID }, Keys.PRODUCT_ENTITY_PKEY, new TableField[] { ProductEntity.PRODUCT_ENTITY.PRODUCT_ID }, true);
}
