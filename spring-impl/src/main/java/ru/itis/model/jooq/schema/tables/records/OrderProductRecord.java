/*
 * This file is generated by jOOQ.
 */
package ru.itis.model.jooq.schema.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.model.jooq.schema.tables.OrderProduct;
import ru.itis.model.jooq.schema.tables.pojos.OrderProductPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderProductRecord extends UpdatableRecordImpl<OrderProductRecord> implements Record3<UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.order_product.order_product_id</code>.
     */
    public void setOrderProductId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_product.order_product_id</code>.
     */
    public UUID getOrderProductId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.order_product.order_id</code>.
     */
    public void setOrderId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_product.order_id</code>.
     */
    public UUID getOrderId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.order_product.product_id</code>.
     */
    public void setProductId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_product.product_id</code>.
     */
    public UUID getProductId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, UUID> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, UUID> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return OrderProduct.ORDER_PRODUCT.ORDER_PRODUCT_ID;
    }

    @Override
    public Field<UUID> field2() {
        return OrderProduct.ORDER_PRODUCT.ORDER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return OrderProduct.ORDER_PRODUCT.PRODUCT_ID;
    }

    @Override
    public UUID component1() {
        return getOrderProductId();
    }

    @Override
    public UUID component2() {
        return getOrderId();
    }

    @Override
    public UUID component3() {
        return getProductId();
    }

    @Override
    public UUID value1() {
        return getOrderProductId();
    }

    @Override
    public UUID value2() {
        return getOrderId();
    }

    @Override
    public UUID value3() {
        return getProductId();
    }

    @Override
    public OrderProductRecord value1(UUID value) {
        setOrderProductId(value);
        return this;
    }

    @Override
    public OrderProductRecord value2(UUID value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderProductRecord value3(UUID value) {
        setProductId(value);
        return this;
    }

    @Override
    public OrderProductRecord values(UUID value1, UUID value2, UUID value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderProductRecord
     */
    public OrderProductRecord() {
        super(OrderProduct.ORDER_PRODUCT);
    }

    /**
     * Create a detached, initialised OrderProductRecord
     */
    public OrderProductRecord(UUID orderProductId, UUID orderId, UUID productId) {
        super(OrderProduct.ORDER_PRODUCT);

        setOrderProductId(orderProductId);
        setOrderId(orderId);
        setProductId(productId);
    }

    /**
     * Create a detached, initialised OrderProductRecord
     */
    public OrderProductRecord(OrderProductPojo value) {
        super(OrderProduct.ORDER_PRODUCT);

        if (value != null) {
            setOrderProductId(value.getOrderProductId());
            setOrderId(value.getOrderId());
            setProductId(value.getProductId());
        }
    }
}
